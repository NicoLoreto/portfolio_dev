@font-face {
    font-family:Playfair Display;
    src: url(./fonts/PlayfairDisplay-Regular.ttf);
}:root {
    --blanco: #e0e0e0;
    --blanco-2: rgba(255,255,255,.2);
    --negro: #181818;
    --negro-5: rgba(0, 0, 0, 0.5);
    --negro-7: rgba(0, 0, 0, 0.75);
    --tipo-titular:'Playfair Display', serif;
    --tipo-principal:'Inter', sans-serif;
  }
  
  /*para cambiar a modo dark o light*/
  @media screen and (prefers-color-scheme:light){
    :root {
      --blanco: #181818;
      --blanco-2: rgba(0,0,0,.2);
      --negro: #e0e0e0;
      --negro-5: rgba(255, 255, 255, 0.5);
      --negro-7: rgba(255, 255, 255, 0.75);
    }
  }


*{
    margin: 0;
    padding: 0;
    border: 0;
    /*para el responsive, que no aparezca el
    scroll horizontal*/
    box-sizing: border-box;
    /*Alinea la línea base del elemento con la línea base del padre. La línea base de algunos elementos reemplazados (en-US), como <textarea> no está especificado en la especificación HTML, que significa que su comportamiento puede cambiar en un navegador u otro.*/
    vertical-align: baseline;
}

img, figure{
    max-width: 100%;
    width: 100%;
    display: flex;
    object-fit: cover;
    object-position: center center;
}

a{
    /*para que no aparezca la manito*/
    cursor: none;
    display: block;
    text-decoration: none;
    color: inherit;
    transition: all .5s ease;
    animation: aparecer1 3s ease 1 backwards;

}

video{
    max-width: 100%;
    width: 100%;
    display: flex;
    object-fit: cover;
    object-position: center center;

}

p a{
    display: inline;
}

li{
    list-style-type: none;
}

table,
tr,
td{
    border-collapse: collapse;
    border-spacing: 0;
}

html{
    scroll-behavior: smooth;
}

h1,
h2,
h3,
h4,
h5,
h6{
    /*Hace que el elemento al cual se aplica tome el valor calculado de la propiedad de su elemento padre.*/
    color: inherit;
    font-weight: inherit;
    font-size: inherit;
}

form, buttom,
input,
textarea,
select{
    font-family: inherit;
    font-size: inherit;
    -webkit-hyphens: auto;
            hyphens: auto;
    background-color: transparent;
    display: flex;
    color: inherit;          
}

body{
    /*para que no aparezca la flecha del cursor*/
    cursor: none;
    font-family: var(--tipo-principal);
    font-size: 100%;
    min-height: 100vh;
    background-color: var(--blanco);
    color: #e0e0e0;
    font-smooth: always;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/*FONDO CIRCULOS*/

.container{
    display: flex;
    /*para que los elementos puedan moverse*/
    flex-wrap: wrap;
}
.circulos{
    /*posicion fija*/
    position:fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  
    /*Cuando varios elementos se superponen, los elementos 
    con mayor valor 
    z-index cubren aquellos con menor valor.*/
    z-index: 1;
    animation:circulo 20s linear infinite both;
}
.circulos .circulo{
    /*en la pag https://www.blobmaker.app/ puedo amrar y 
    usar los svg como quiera
    y copiar el codigo*/
    position:absolute;
    width: 50%;
    height: 50%;
    filter: blur(10px);
    animation:circulo 100s linear infinite both;
    z-index: 0;

}

.circulos .circulo1{
    top: 0%;
    left: 0%;
    
    }
  

.circulos .circulo1 .path{
/*agrego fill para darle color*/
fill: rgb(12, 121, 60);
}



.circulos .circulo2 .path{
fill: rgb(105, 65, 65);
}
.circulos .circulo2{
top: 0%;
right: 0%;
}
.circulos .circulo3 .path{
fill: rgb(154, 100, 13);
}

.circulos .circulo3{
bottom: 0%;
left: 0%;
}
.circulos .circulo4 .path{
fill: rgb(96, 105, 230);
}
.circulos .circulo4{
bottom: 0%;
right: 0%; 
}


.header{
    width: 100%;
    /*nunca usar altura si no es una posiscion absoluta
    nunca en porcentaje
    usar minimo de altura*/
    min-height: 5em;
    /*background: lightskyblue;*/
    /*con padding agrego espacio entre los elementos
    1 por arriba y por abajo y 2 por cada lateral*/
    padding: 1em 2em;
/*para alinear uno al lado del otro anado flex*/
    display: none;
    flex-flow: row wrap;
    /* con space - between todo el espacio disponible se coloca entre el 
    primer y el último artículo, empujando ambos artículos hacia los bordes 
    opuestos del contenedor.*/
    justify-content: space-between;
    align-items: center;
    padding: 2em 0;
    text-align: center;
    z-index: 2;
    position: relative;
}
.header .h1{
    /*background: lightgrey;*/
    
}
.header .h1 .a{
    
}
.header .nav{
    
}
.header .ul{
    display: flex;
    flex-flow: row wrap;
    /* con space - between todo el espacio disponible se coloca entre el primer y el último artículo, empujando ambos artículos hacia los bordes opuestos del contenedor.*/
    justify-content: space-between;
    align-items: center;
}
.header .ul .li{
    /*margen por lado de 1em*/
    list-style: none; /* Quitamos los marcadores */
    margin: 0 1em;
    /*background: rgb(153, 207, 153);*/
}
.header .ul .li .a{

}

/*MAIN*/

.main{
    
    /*hago un margin para que se separe*/
    margin: 0 0 0em;
    text-align: center;
    position: relative;
    z-index: 2;
}
.seccion{
    
    /*vh se usa para el tamano de la pantalla*/
    min-height: 80vh;
    
    /*separo con margin*/
    /*margin: 1em 0;*/
    text-align: center;
    display: flex;
    flex-flow: column wrap;
    justify-content: center;
    align-items: center;
    padding: 2em;
}
.seccion .ul{
    
    margin: 2em 0 0;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
}
.seccion .ul .li{
    
    margin: 0 1em;
}
.seccion .ul .li .a{
    /*subrayo por encima*/
    border-top: 1px solid rgb(255,255,255,.2);

    /*redondeo*/
    /*border-radius: 50%;*/
    /*border: 1px solid rgb(0,0,0,.2);*/
    padding: 1em 1em 1em;
    text-transform: uppercase;
    font-weight: 600;
    /*Permite definir la transición entre dos estados de 
    un elemento. Hay diferentes estados que pueden ser definidos 
    utilizando pseudo-clases (en-US) como :hover o :active o 
    aplicado dinámicamente usando JavaScript.*/
   
}

/*que la segunda etiqueta a haga una animacion distinta, que entre
mas tarde
notar que con ul>:nth-child(2) me refiero al segundo hijo
de ul, es decir el segundo li con etiqueta a*/

.seccion .ul>:nth-child(2) .a{
    animation-delay: 1s;
}


/*cuando entre el mouse pasara esto*/
.seccion .ul .li .a:hover{
   border-color: #e0e0e0;
   border: 1px solid #e0e0e0;
  
   

}
.seccion .h2{
    color: #e0e0e0;
    font-family: var(--tipo-titular);
    font-size: 5em;
    /*negrita*/
    font-weight: 600;
    line-height: 1em;
    /*hace efectors de photoshop*/
    /*mix-blend-mode: multiply;*/
    
    
}
.seccion .h3{
    font-family: var(--tipo-titular);
    font-size: 4.3em;
    /*que aparezca una letra por vez*/
    /*animation: escribiendo 5s steps(36, end);*/
    
}
.seccion .info{
    
    font-size: 1.2em;
    /*aparecer de abajo hacia arriba*/
    animation: aparecer1 2s ease 1 both;
}

.seccion .p{}
.seccion .grid{
    max-width: 40em;
    width: 90%;
    
    display: grid;
    margin: 2em 0 ;
    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
    /*separar uno del otro*/
    gap: 1em;
    
    
}
.seccion .article{
    margin: auto;
    width: 100%;
    
    min-height: 20vh;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
    position: relative;
    /*para que no sobrepase cuando haga el efecto traslate*/
    overflow: hidden;
    
}
.seccion .a{}
.seccion .img{
    margin: 0 .5rem 0 .5rem;
    
    height: 370px;
    justify-content: center;
    align-items: center;
    
    
}

.seccion .h4{
    width: 100%;
    height: 100%;
    background-color: rgb(255,255,255,rgba(0, 0, 0, 0.5));
    position: absolute;
    bottom: 0;
    left: 0;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
    /*filtro la imagen*/
    backdrop-filter: blur(1rem);
    /*opacidad*/
    opacity: 0;
    transition: all .5s ease;
    color: rgb(22, 15, 15);
    font-size: 1.8em;
    text-transform: uppercase;
    font-family: var(--tipo-titular);
    font-style: italic;
    /*efecto en el eje X para generear movimiento*/
    /*transform: translateX(100%);*/

    /*efecto de adentro para afuera con scale,
    para evitar el fail translateZ que siempre este en 1*/

    transform: translateZ(1) scale(1.2);
}

.seccion .article:hover .h4{
    opacity: 1;
    /*transform: translateX(0%);*/
    transform: translateZ(1) scale(1);

}

.trabajos{
    
    margin-top: 5em;
    border-bottom: 1px solid white;
    border-top: 1px solid white;
    background-color: rgba(8, 7, 7, 0.411);
    text-align: center;
    justify-content: center;
    align-items: center;
}
.trabajos .h2{
    margin: 0 0 1.5rem;
    color: inherit;
    
}

.trabajos .p{
font-family: var(--tipo-titular);
text-transform: uppercase;

}

.acercade{
    justify-content: center;
    align-items: center;
    text-align: center;
}
.acercade .h2{
    margin: 0 0 4rem;

}
.acercade .p{
    max-width: 40rem;
    
    /*alineo a la izquierda*/
    text-align: left;
    /*arriba, a la derecha, abajo, a la izquierda*/
    margin: 0 0 1rem;
    font-size: 1.2em;
    justify-content: center;
    align-items: center;
}
.acercade .redessociales{
    margin: 5rem 0 0 0;
    width: 100%;
 
    list-style: none;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
}
.acercade .li{
    margin: 0 1em;
   
}
.acercade .a{}
.acercade .svg{
    width: 2em;
    height: 2em;
    
    
}

.footer{
    
    /*padding por arriba y por abajo*/
    padding: 2em 0;
    text-align: center;
    z-index: 2;
    position: relative;
   
    
}
.footer .span{

}

  /*ANIMACION*/
    
  @keyframes circulo{
    from{
        transform:rotate(0deg) scale(3);
    }
    to{
        transform:rotate(360deg) scale(3);
    }
}

@keyframes aparecer1{
    from{
        opacity: 0;
        transform: translateY(50%);
    }
    to{
        opacity: 1;
        transform: translateY(0%)
    }
}

#cursor{
    /*fixed hace que un elemento se coloque respecto al 
    viewport, Le dices dónde posicionarse al elemento, y se queda 
    ahí mientras el usuario hace scroll. El elemento no conserva su espacio en el flujo, todo el espacio que tuviera 
    reservado ese elemento desaparece. ↕️↔️ top, right, bottom, left*/
    position: fixed;
    width: 4rem;
    height: 4rem;
    background: #e0e0e0;
    left: 0;
    top: 0;
    z-index: 3;
    /*establece bajo qué circunstancias (si las hay) 
    un elemento gráfico particular 
    puede convertirse en el objetivo de los eventos de puntero.*/
    pointer-events: none;
    border-radius: 50%;
    /*cambia el color cuando cambia el color detras*/
    mix-blend-mode: difference;
}

/*agrego .mini para con js achicar el cursor cuando pasa por
un enlace*/

/*prestar atencion que vayan pegados*/
#cursor.mini{
    transform: scale(0.4);
    /*que hace ease?
        ease-in comenzará la animación lentamente y 
        finalizará a toda velocidad.
        ease-out iniciará la animación a toda velocidad, luego 
        terminará lentamente.
        ease-in-out comenzará lentamente, será más rápido en el 
        medio de la animación y luego terminará lentamente.
        ease es como easy-in-out, excepto que comienza ligeramente
        más rápido de lo que termina.
        linear no usa relajación.*/
    transition: all .2s linear;
}

/*cuando sea menor a 720px*/
@media (max-width: 920px){
    .seccion{
        font-size: .5em;
        
    }
    body{
        cursor:auto;
    }
    #cursor{
        display: none;
    }
    a{
        cursor:pointer;
    }
    .acercade .p{
        font-size: 1.5rem;
    }

    .acercade .svg{
        width: 6em;
        height: 6em;
        
    }

    .seccion .img{
        height: 300px;
    }
}





/*@keyframes escribiendo{
	from{width:100%}
	to{width:0}
}

/*EM y REM TEORIA

1 em es igual a 16px
pero em siempre hereda del elemento padre
es decir que si el hijo de un primer contenedor usa 1em
va a ser en relacion al em que uso su elento padre

si en el primer contenedor se uso 1em (=== a 16px)
en su hijo 1em sera ==== a 32px*
es mejor para tipografias.

rem no tiene en cuenta al elemento padre,
asiq sera siempre igual a 16px
es mejor para margenes*/
